     1                                 %line 1+1 ass9.asm
     2                                 
     3                                 
     4                                 
     5                                 
     6                                 
     7                                 
     8                                 
     9                                 
    10                                 
    11                                 
    12                                 
    13                                 
    14                                 
    15                                 
    16                                 
    17                                 
    18                                 
    19                                 
    20                                 
    21                                 
    22                                 
    23                                 
    24                                 
    25                                 
    26                                 
    27                                 
    28                                 
    29                                 
    30                                 
    31                                 
    32                                 
    33                                 %line 75+1 ass9.asm
    34                                 
    35                                 
    36                                 
    37                                 
    38                                 
    39                                 
    40                                 
    41                                 
    42                                 
    43                                 
    44                                 
    45                                 
    46                                 
    47                                 
    48                                 
    49                                 
    50                                 
    51                                 
    52                                 
    53                                 
    54                                 
    55                                 
    56                                 
    57                                 
    58                                 
    59                                 
    60                                 
    61                                 
    62                                 
    63                                 [section .data]
    64                                 
    65                                 
    66                                 
    67                                 
    68                                 TRUE equ 1
    69                                 FALSE equ 0
    70                                 
    71                                 SUCCESS equ 0
    72                                 NOSUCCESS equ 1
    73                                 
    74                                 STDIN equ 0
    75                                 STDOUT equ 1
    76                                 STDERR equ 2
    77                                 
    78                                 SYS_read equ 0
    79                                 SYS_write equ 1
    80                                 SYS_open equ 2
    81                                 SYS_close equ 3
    82                                 SYS_fork equ 57
    83                                 SYS_exit equ 60
    84                                 SYS_creat equ 85
    85                                 SYS_time equ 201
    86                                 
    87                                 LF equ 10
    88                                 NULL equ 0
    89                                 ESC equ 27
    90                                 
    91                                 BUFFSIZE equ 50
    92                                 MINNUMBER equ 1
    93                                 MAXNUMBER equ 1000
    94                                 
    95                                 OUTOFRANGEMIN equ 2
    96                                 OUTOFRANGEMAX equ 3
    97                                 INPUTOVERFLOW equ 4
    98                                 ENDOFINPUT equ 5
    99                                 
   100                                 
   101                                 
   102 00000000 00000000               len dd 0
   103                                 
   104                                 
   105                                 
   106                                 
   107 00000004 00                     swapped db FALSE
   108                                 
   109                                 
   110                                 
   111                                 
   112 00000005 06000000               ddSix dd 6
   113                                 
   114                                 
   115                                 
   116                                 
   117 00000009 04000000               ddFour dd 4
   118                                 
   119                                 
   120                                 
   121                                 
   122                                 
   123                                 
   124                                 
   125                                 
   126                                 
   127                                 
   128                                 
   129                                 [section .text]
   130                                 
   131                                 
   132                                 
   133                                 
   134                                 
   135                                 
   136                                 
   137                                 
   138                                 
   139                                 
   140                                 
   141                                 
   142                                 
   143                                 
   144                                 
   145                                 
   146                                 
   147                                 
   148                                 
   149                                 
   150                                 
   151                                 
   152                                 
   153                                 
   154                                 
   155                                 [global readBinaryNum]
   156                                 readBinaryNum:
   157                                 
   158 00000000 55                     push rbp
   159 00000001 4889E5                 mov rbp, rsp
   160 00000004 4883EC34               sub rsp, 52
   161 00000008 4883EC01               sub rsp, 1
   162                                 
   163 0000000C 56                     push rsi
   164 0000000D 51                     push rcx
   165 0000000E 52                     push rdx
   166 0000000F 53                     push rbx
   167 00000010 4154                   push r12
   168 00000012 4150                   push r8
   169                                 
   170 00000014 4989F8                  mov r8,rdi
   171                                 
   172 00000017 488D5DCC                lea rbx, [rbp-52]
   173 0000001B 49C7C400000000          mov r12,0
   174 00000022 C70425[00000000]00-     mov dword[len], 0
   175 00000022 000000             
   176                                 
   177                                 
   178                                 
   179                                 
   180                                  leadingSpace:
   181 0000002D 48C7C100000000          mov rcx, 0
   182                                 
   183 00000034 48C7C000000000          mov rax, SYS_read
   184 0000003B 48C7C700000000          mov rdi, STDIN
   185 00000042 488D75CB                lea rsi, [rbp-53]
   186 00000046 48C7C201000000          mov rdx, 1
   187 0000004D 0F05                    syscall
   188                                 
   189 0000004F 48C7C100000000          mov rcx, 0
   190 00000056 8A4DCB                  mov cl, byte[rbp-53]
   191 00000059 80F90A                  cmp cl, LF
   192 0000005C 7452                    je readDone
   193                                 
   194 0000005E 80F909                  cmp cl, 0x09
   195 00000061 74C8                    je leadingSpace
   196                                 
   197 00000063 80F920                  cmp cl, 0x20
   198 00000066 74C3                    je leadingSpace
   199                                 
   200 00000068 EB36                    jmp firstChr
   201                                 
   202                                 
   203                                  readCharacters:
   204 0000006A 48C7C000000000          mov rax, 0
   205 00000071 48C7C100000000          mov rcx, 0
   206                                 
   207 00000078 48C7C000000000          mov rax, SYS_read
   208 0000007F 48C7C700000000          mov rdi, STDIN
   209 00000086 488D75CB                lea rsi, [rbp-53]
   210 0000008A 48C7C201000000          mov rdx, 1
   211 00000091 0F05                    syscall
   212                                 
   213 00000093 48C7C100000000          mov rcx, 0
   214 0000009A 8A4DCB                  mov cl, byte[rbp-53]
   215 0000009D 80F90A                  cmp cl ,LF
   216 000000A0 740E                    je readDone
   217                                 
   218                                  firstChr:
   219                                 
   220 000000A2 49FFC4                  inc r12
   221 000000A5 4983FC32                cmp r12, BUFFSIZE
   222 000000A9 73BD                    jae readCharacters
   223                                 
   224 000000AB 880B                    mov byte[rbx], cl
   225 000000AD 48FFC3                  inc rbx
   226                                 
   227 000000B0 EBB6                    jmp readCharacters
   228                                 
   229                                  readDone:
   230                                 
   231                                 
   232                                 
   233                                 
   234 000000B2 4983FC32                cmp r12, BUFFSIZE
   235 000000B6 0F8FB6000000            jg overFlow
   236                                 
   237 000000BC 4983FC00                cmp r12,0
   238 000000C0 0F84D0000000            je noInput
   239                                 
   240 000000C6 42C64425CC00            mov byte[(rbp-52)+r12],NULL
   241                                 
   242 000000CC 44892425[00000000]      mov dword[len], r12d
   243                                 
   244                                 
   245                                 
   246                                 
   247                                 
   248                                 
   249                                 
   250 000000D4 48C7C100000000          mov rcx, 0
   251                                 
   252 000000DB 488D5DCC                lea rbx, [rbp-52]
   253                                 
   254                                  binaryCheck:
   255 000000DF 48C7C000000000          mov rax, 0
   256 000000E6 8A040B                  mov al, byte[rbx+rcx]
   257                                 
   258 000000E9 3C30                    cmp al, 0x30
   259 000000EB 0F8C8A000000            jl notBinary
   260                                 
   261 000000F1 3C31                    cmp al, 0x31
   262 000000F3 0F8782000000            ja notBinary
   263                                 
   264 000000F9 48FFC1                  inc rcx
   265                                 
   266 000000FC 4C39E1                  cmp rcx,r12
   267 000000FF 72DC                    jb binaryCheck
   268                                 
   269                                 
   270                                 
   271                                 
   272                                 
   273                                 
   274 00000101 488D5DCC                lea rbx, [rbp-52]
   275                                 
   276                                 
   277                                 %line 316+0 ass9.asm
   278 00000105 51                     push rcx
   279 00000106 56                     push rsi
   280 00000107 4151                   push r9
   281 00000109 4154                   push r12
   282                                 
   283 0000010B 49C7C400000000          mov r12, 0
   284 00000112 448B2425[00000000]      mov r12d, dword[len]
   285 0000011A 41FFCC                  dec r12d
   286                                 
   287 0000011D 41C70000000000          mov dword [r8], 0
   288 00000124 4C89E1                  mov rcx, r12
   289 00000127 4889DE                  mov rsi, rbx
   290                                 
   291                                 
   292                                  ..@3.convertLoop:
   293 0000012A 49C7C400000000          mov r12,0
   294 00000131 448A26                  mov r12b, byte [rsi]
   295                                 
   296 00000134 41B901000000            mov r9d , 1
   297                                 
   298                                 
   299 0000013A 4180FC31                cmp r12b, "1"
   300 0000013E 7504                    jne ..@3.notA1
   301                                 
   302 00000140 41D3E1                  shl r9d, cl
   303 00000143 450108                  add dword[r8], r9d
   304                                 
   305                                  ..@3.notA1:
   306                                 
   307 00000146 48FFC6                  inc rsi
   308 00000149 48FFC9                  dec rcx
   309                                 
   310 0000014C 4180FC00                cmp r12b, NULL
   311 00000150 75D6                    jne ..@3.convertLoop
   312                                 
   313 00000152 415C                    pop r12
   314 00000154 4159                    pop r9
   315 00000156 5E                      pop rsi
   316 00000157 59                      pop rcx
   317                                 
   318                                 %line 317+1 ass9.asm
   319 00000158 48C7C600000000          mov rsi, 0
   320 0000015F 418B30                  mov esi, dword[r8]
   321                                 
   322 00000162 83FE01                  cmp esi, MINNUMBER
   323 00000165 7221                    jb lessThanMin
   324                                 
   325 00000167 81FEE8030000            cmp esi, MAXNUMBER
   326 0000016D 7722                    ja greaterThanMax
   327                                 
   328                                 
   329                                 
   330                                 
   331                                 
   332 0000016F 48C7C000000000          mov rax, SUCCESS
   333 00000176 EB29                    jmp end
   334                                 
   335                                 
   336                                 
   337                                 
   338                                  overFlow:
   339 00000178 48C7C004000000          mov rax, INPUTOVERFLOW
   340 0000017F EB20                    jmp end
   341                                 
   342                                  notBinary:
   343 00000181 48C7C001000000          mov rax, NOSUCCESS
   344 00000188 EB17                    jmp end
   345                                 
   346                                  lessThanMin:
   347 0000018A 48C7C002000000          mov rax, OUTOFRANGEMIN
   348 00000191 EB0E                    jmp end
   349                                 
   350                                  greaterThanMax:
   351 00000193 48C7C003000000          mov rax, OUTOFRANGEMAX
   352 0000019A EB05                    jmp end
   353                                 
   354                                  noInput:
   355 0000019C 48C7C005000000          mov rax, ENDOFINPUT
   356                                 
   357                                 end:
   358                                 
   359                                 
   360 000001A3 4158                   pop r8
   361 000001A5 415C                   pop r12
   362 000001A7 5B                     pop rbx
   363 000001A8 5A                     pop rdx
   364 000001A9 59                     pop rcx
   365 000001AA 5E                     pop rsi
   366                                 
   367 000001AB 4889EC                 mov rsp, rbp
   368 000001AE 5D                     pop rbp
   369                                 
   370 000001AF C3                     ret
   371                                 
   372                                 
   373                                 
   374                                 
   375                                 
   376                                 
   377                                 
   378                                 
   379                                 
   380                                 
   381                                 
   382                                 
   383                                 
   384                                 
   385                                 
   386                                 
   387                                 
   388                                 [global cubeAreas]
   389                                 cubeAreas:
   390                                 
   391                                 
   392                                 
   393 000001B0 50                      push rax
   394 000001B1 51                      push rcx
   395 000001B2 4150                    push r8
   396                                 
   397 000001B4 4989D0                  mov r8, rdx
   398 000001B7 48C7C200000000          mov rdx, 0
   399 000001BE 48C7C000000000          mov rax, 0
   400 000001C5 48C7C100000000          mov rcx, 0
   401                                 
   402                                  getAreas:
   403 000001CC 8B048F                  mov eax, dword[rdi+(rcx*4)]
   404 000001CF F7E8                    imul eax
   405 000001D1 F72C25[00000000]        imul dword [ddSix]
   406                                 
   407 000001D8 41890488                mov dword[r8+(rcx*4)],eax
   408                                 
   409                                 
   410                                 
   411 000001DC 48FFC1                  inc rcx
   412 000001DF 39F1                    cmp ecx,esi
   413 000001E1 72E7                    jb getAreas
   414                                 
   415 000001E3 48C7C200000000          mov rdx,0
   416 000001EA 4C89C2                  mov rdx,r8
   417                                 
   418 000001ED 4158                    pop r8
   419 000001EF 59                      pop rcx
   420 000001F0 58                      pop rax
   421                                 
   422 000001F1 C3                     ret
   423                                 
   424                                 
   425                                 
   426                                 
   427                                 
   428                                 
   429                                 
   430                                 
   431                                 
   432                                 
   433                                 
   434                                 
   435                                 
   436                                 
   437                                 
   438                                 
   439                                 
   440                                 
   441                                 
   442                                 
   443                                 
   444                                 
   445                                 
   446                                 
   447                                 
   448                                 
   449                                 
   450                                 
   451                                 
   452                                 
   453                                 
   454                                 
   455                                 
   456                                 
   457                                 
   458                                 
   459                                 
   460                                 
   461                                 
   462                                 
   463                                 
   464                                 
   465                                 
   466                                 
   467                                 
   468                                 
   469                                 
   470                                 
   471                                 
   472                                 
   473                                 
   474                                 
   475                                 
   476                                 [global cocktailSort]
   477                                 cocktailSort:
   478                                 
   479                                 
   480                                 
   481                                 
   482                                 
   483 000001F2 50                     push rax
   484 000001F3 4154                   push r12
   485 000001F5 4156                   push r14
   486 000001F7 4157                   push r15
   487                                 
   488 000001F9 41BA00000000            mov r10d, 0
   489                                 
   490 000001FF 4189F3                  mov r11d, esi
   491 00000202 41FFCB                  dec r11d
   492                                 
   493 00000205 49C7C401000000          mov r12, TRUE
   494                                 
   495                                  whileLoop:
   496                                 
   497 0000020C 4983FC01                cmp r12, TRUE
   498 00000210 756F                    jne endofWhile
   499                                 
   500 00000212 49C7C400000000          mov r12, FALSE
   501                                 
   502 00000219 48C7C000000000          mov rax, 0
   503                                 
   504                                 
   505                                 
   506                                 
   507 00000220 4489D0                  mov eax, r10d
   508                                 
   509                                  forLoop1:
   510                                 
   511 00000223 4439D8                  cmp eax, r11d
   512 00000226 7320                    jae endofFL1
   513                                 
   514 00000228 448B3487                mov r14d, dword[rdi+(rax*4)]
   515 0000022C 448B7C8704              mov r15d, dword[rdi+(rax*4)+4]
   516                                 
   517 00000231 4539FE                  cmp r14d,r15d
   518 00000234 730E                    jae leftValueisSmaller
   519                                 
   520 00000236 4489748704              mov dword [rdi+(rax*4)+4], r14d
   521 0000023B 44893C87                mov dword [rdi +(rax*4)], r15d
   522 0000023F 49C7C401000000          mov r12 , TRUE
   523                                 
   524                                  leftValueisSmaller:
   525                                 
   526                                 
   527 00000246 FFC0                    inc eax
   528 00000248 EBD7                    jmp forLoop1
   529                                 
   530                                  endofFL1:
   531                                 
   532                                 
   533                                 
   534 0000024A 48C7C000000000          mov rax, 0
   535                                 
   536 00000251 41FFCB                  dec r11d
   537 00000254 4489D8                  mov eax, r11d
   538                                 
   539                                 
   540                                  forLoop2:
   541                                 
   542 00000257 4439D0                  cmp eax, r10d
   543 0000025A 7620                    jbe endofFL2
   544                                 
   545 0000025C 448B3487                mov r14d, dword[rdi+(rax*4)]
   546 00000260 448B7C87FC              mov r15d, dword[rdi+(rax*4)-4]
   547                                 
   548 00000265 4539FE                  cmp r14d,r15d
   549 00000268 760E                    jbe rightValueisSmaller
   550                                 
   551 0000026A 44893C87                mov dword[rdi+(rax*4)], r15d
   552 0000026E 44897487FC              mov dword[rdi+(rax*4)-4], r14d
   553                                 
   554 00000273 49C7C401000000          mov r12, TRUE
   555                                 
   556                                  rightValueisSmaller:
   557                                 
   558 0000027A FFC8                    dec eax
   559 0000027C EBD7                    jmp forLoop2
   560                                 
   561                                  endofFL2:
   562                                 
   563                                 
   564                                 
   565                                 
   566 0000027E 41FFC2                  inc r10d
   567 00000281 EB87                    jmp whileLoop
   568                                 
   569                                  endofWhile:
   570                                 
   571 00000283 415F                   pop r15
   572 00000285 415E                   pop r14
   573 00000287 415C                   pop r12
   574 00000289 58                     pop rax
   575                                 
   576 0000028A C3                     ret
   577                                 
   578                                 
   579                                 
   580                                 
   581                                 
   582                                 
   583                                 
   584                                 
   585                                 
   586                                 
   587                                 
   588                                 
   589                                 
   590                                 
   591                                 
   592                                 
   593                                 
   594                                 
   595                                 
   596                                 
   597                                 
   598                                 
   599                                 
   600                                 
   601                                 
   602                                 [global cubeStats]
   603                                 cubeStats:
   604                                 
   605 0000028B 55                     push rbp
   606 0000028C 4889E5                 mov rbp, rsp
   607 0000028F 50                     push rax
   608 00000290 53                     push rbx
   609 00000291 4157                   push r15
   610                                 
   611                                 
   612                                 
   613 00000293 48C7C000000000          mov rax,0
   614 0000029A 49C7C700000000          mov r15,0
   615 000002A1 448B3F                  mov r15d, dword [rdi]
   616 000002A4 448939                  mov dword[rcx],r15d
   617                                 
   618 000002A7 4863C6                  movsxd rax, esi
   619 000002AA 48FFC8                  dec rax
   620 000002AD 448B3C87                mov r15d, dword[rdi+(rax*4)]
   621 000002B1 44893A                  mov dword[rdx], r15d
   622                                 
   623                                 
   624                                 
   625 000002B4 48C7C100000000          mov rcx,0
   626 000002BB 48C7C300000000          mov rbx,0
   627 000002C2 41C70000000000          mov dword[r8],0
   628                                 
   629                                  statsLoop:
   630 000002C9 48C7C200000000          mov rdx,0
   631 000002D0 48C7C000000000          mov rax,0
   632                                 
   633 000002D7 8B048F                  mov eax, dword[rdi+(rcx*4)]
   634 000002DA 410100                  add dword[r8], eax
   635                                 
   636                                 
   637 000002DD 99                      cdq
   638 000002DE F73C25[00000000]        idiv dword [ddFour]
   639                                 
   640 000002E5 83FA00                  cmp edx,0
   641 000002E8 7503                    jne notDivBy4
   642                                 
   643 000002EA 8B048F                  mov eax, dword[rdi+(rcx*4)]
   644 000002ED 01C3                    add ebx, eax
   645                                 
   646                                  notDivBy4:
   647                                 
   648                                 
   649 000002EF 48FFC1                  inc rcx
   650 000002F2 39F1                    cmp ecx,esi
   651 000002F4 72D1                    jb statsLoop
   652                                 
   653 000002F6 48C7C000000000          mov rax,0
   654 000002FD 488B4510                mov rax , qword[rbp+16]
   655                                 
   656 00000301 C70000000000            mov dword[rax],0
   657 00000307 8918                    mov dword[rax],ebx
   658                                 
   659                                 
   660 00000309 48C7C000000000          mov rax, 0
   661 00000310 418B00                  mov eax, dword[r8]
   662 00000313 99                      cdq
   663 00000314 F7FE                    idiv esi
   664 00000316 418901                  mov dword [r9], eax
   665                                 
   666 00000319 415F                   pop r15
   667 0000031B 5B                     pop rbx
   668 0000031C 58                     pop rax
   669 0000031D 5D                     pop rbp
   670                                 
   671 0000031E C3                     ret
   672                                 
   673                                 
   674                                 
   675                                 
   676                                 
   677                                 
   678                                 
   679                                 
   680                                 
   681                                 
   682                                 
   683                                 
   684                                 
   685                                 
   686                                 
   687                                 
   688                                 
   689                                 
   690                                 [global iMedian]
   691                                 iMedian:
   692                                 
   693 0000031F 53                     push rbx
   694 00000320 52                     push rdx
   695 00000321 4150                   push r8
   696                                 
   697 00000323 48C7C000000000          mov rax, 0
   698 0000032A 48C7C200000000          mov rdx, 0
   699 00000331 49C7C002000000          mov r8,2
   700                                 
   701 00000338 4863C6                  movsxd rax, esi
   702 0000033B 49F7F0                  div r8
   703                                 
   704 0000033E 49C7C000000000          mov r8,0
   705                                 
   706 00000345 4883FA00                cmp rdx, 0
   707 00000349 740E                    je evenList
   708                                 
   709                                 
   710 0000034B 448B0487                mov r8d, dword[rdi+(rax*4)]
   711 0000034F 48C7C000000000          mov rax,0
   712 00000356 4489C0                  mov eax, r8d
   713 00000359 EB14                    jmp medDone
   714                                 
   715                                  evenList:
   716 0000035B 44030487                add r8d, dword[rdi+(rax*4)]
   717 0000035F 44034487FC              add r8d, dword[rdi+(rax*4)-4]
   718 00000364 41D1F8                  sar r8d,1
   719 00000367 48C7C000000000          mov rax,0
   720 0000036E 4489C0                  mov eax,r8d
   721                                 
   722                                  medDone:
   723                                 
   724 00000371 4158                   pop r8
   725 00000373 5A                     pop rdx
   726 00000374 5B                     pop rbx
   727                                 
   728 00000375 C3                     ret
   729                                 
   730                                 
   731                                 
   732                                 
   733                                 
   734                                 
   735                                 
   736                                 
   737                                 
   738                                 
   739                                 
   740                                 
   741                                 
   742                                 
   743                                 
   744                                 
   745                                 
   746                                 
   747                                 [global mStatistic]
   748                                 mStatistic:
   749                                 
   750 00000376 51                      push rcx
   751 00000377 52                      push rdx
   752 00000378 53                      push rbx
   753                                 
   754 00000379 48C7C000000000          mov rax, 0
   755 00000380 48C7C100000000          mov rcx, 0
   756 00000387 49C7C200000000          mov r10, 0
   757 0000038E 4C63DE                  movsxd r11, esi
   758                                 
   759                                 
   760                                 
   761                                  mStatLoop:
   762                                 
   763 00000391 49C7C200000000          mov r10, 0
   764 00000398 E87DFFFFFF              call iMedian
   765 0000039D 4898                    cdqe
   766                                 
   767 0000039F 448B148F                mov r10d,dword[rdi+(rcx*4)]
   768                                 
   769 000003A3 4929C2                  sub r10, rax
   770 000003A6 4C89D0                  mov rax, r10
   771 000003A9 48F7E8                  imul rax
   772                                 
   773                                 
   774 000003AC 4801C3                  add rbx, rax
   775                                 
   776 000003AF 48FFC1                  inc rcx
   777 000003B2 4C39D9                  cmp rcx, r11
   778 000003B5 72D8                    jb mStatLoop
   779                                 
   780 000003B7 4889D8                  mov rax, rbx
   781                                 
   782                                 
   783 000003BA 5B                      pop rbx
   784 000003BB 5A                      pop rdx
   785 000003BC 59                      pop rcx
   786                                 
   787                                 
   788 000003BD C3                     ret
   789                                 
   790                                 
   791                                 
